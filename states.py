from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from database import select_cost

fsm_router = Router()




class Form(StatesGroup):
    budget = State()

@fsm_router.message(Command('budget'))
async def cmd_budget(message: Message, state: FSMContext):
    await state.set_state(Form.budget)
    await message.answer('–ö–∞–∫–æ–≤ –≤–∞—à –±—é–¥–∂–µ—Ç –≤ —Ä—É–±–ª—è—Ö?')

@fsm_router.message(Form.budget)
async def procces_budget(message: Message,state:FSMContext):
    await state.update_data(budget = message.text)
    data = await state.get_data()
    budget = message.text
    budget_list = select_cost(budget)
    list1 = []
    for city,cost in budget_list:
        list1.append(city)
    if len(list1) == 0:
        await message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∑–∞ —Ç–∞–∫—É—é —Å—É–º–º—É üò•')
    else:
        await message.answer(text=f'–í–∞–º –ø–æ–¥–æ–π–¥—É—Ç —Ç—É—Ä—ã –≤ —Ç–∞–∫–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–∞–∫:\n<b>{str('\n'.join(str(x) for x in list1))}</b> \n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≥–æ—Ä–æ–¥–∞—Ö –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"start"</b>', parse_mode='HTML')
    await state.clear()